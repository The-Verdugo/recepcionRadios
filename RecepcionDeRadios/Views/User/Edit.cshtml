@model RecepcionDeRadios.Models.User

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h2>Editar Usuario</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" class="form-control" value="@Model.Username" id="usuario" name="usuario" />
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" , @autocomplete= "new-password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="Level" name="Level" class="form-control">
                        @if (Model.Level == 1)
                        {
                            <option value="1" selected>Administrador</option>
                            <option value="2">Técnico</option>
                        }
                        else if (Model.Level == 2)
                        {
                            <option value="1">Administrador</option>
                            <option value="2" selected>Técnico</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select id="Active" name="Active" class="form-control">
                        @if (Model.Active == 1)
                        {
                            <option value="1" selected>Si</option>
                            <option value="2">No</option>
                        }
                        else if (Model.Active == 2)
                        {
                            <option value="1">Si</option>
                            <option value="2" selected>No</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        <a href="javascript:history.back();" class="btn btn-default"><i class="fas fa-long-arrow-alt-left"></i> Regresar</a>
    </div>
</div>